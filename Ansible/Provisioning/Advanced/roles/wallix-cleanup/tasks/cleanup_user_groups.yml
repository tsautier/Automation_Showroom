---
# Task file for cleaning up WALLIX User Groups

- name: "🔍 Cleanup | Get all user groups"
  uri:
    url: "{{ wallix_api.base_url }}/usergroups"
    method: GET
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(false) }}"
    timeout: 30
    status_code: [200]
    return_content: yes
  register: all_user_groups

- name: "🗑️ Cleanup | Filter user groups for deletion"
  set_fact:
    user_groups_to_delete: []

- name: "🗑️ Cleanup | Check each user group against include patterns"
  set_fact:
    user_groups_to_delete: "{{ user_groups_to_delete + [item] }}"
  loop: "{{ all_user_groups.json | default([]) }}"
  when:
    - all_user_groups is defined
    - all_user_groups.json is defined
    - item.group_name is match(include_regex)
    - not (item.group_name is match(exclude_regex))
  vars:
    include_regex: "{{ wallix_cleanup_filters.include_patterns | map('replace', '*', '.*') | map('replace', '?', '.') | join('|') }}"
    exclude_regex: "{{ wallix_cleanup_filters.exclude_patterns | map('replace', '*', '.*') | map('replace', '?', '.') | join('|') }}"

- name: "📊 Cleanup | Display user groups to delete"
  debug:
    msg:
      - "Found {{ user_groups_to_delete | length }} user groups to delete"
      - "User groups: {{ user_groups_to_delete | map(attribute='group_name') | list }}"

- name: "🗑️ Cleanup | Delete user group"
  uri:
    url: "{{ wallix_api.base_url }}/usergroups/{{ item.group_name }}"
    method: DELETE
    headers:
      Cookie: "{{ wallix_session_cookie }}"
    validate_certs: "{{ wallix_auth.connection.verify_ssl | default(false) }}"
    timeout: 30
    status_code: [200, 204, 404]
    return_content: yes
  loop: "{{ user_groups_to_delete }}"
  register: delete_user_group_result
  failed_when: false  # Continue on errors but track them
  when: 
    - wallix_cleanup.operation_mode == 'execute'

- name: "📈 Cleanup | Update user group deletion stats (dry run)"
  set_fact:
    wallix_cleanup_stats: "{{ wallix_cleanup_stats | default({}) | combine({
        'user_groups_processed': user_groups_to_delete | length,
        'user_groups_deleted': 0,
        'user_groups_errors': 0
      }) }}"
  when: wallix_cleanup.operation_mode == 'dry_run'

- name: "📈 Cleanup | Update user group deletion stats (real run)"  
  set_fact:
    wallix_cleanup_stats: "{{ wallix_cleanup_stats | default({}) | combine({
        'user_groups_processed': user_groups_to_delete | length,
        'user_groups_deleted': (delete_user_group_result.results | default([]) | selectattr('status', 'defined') | selectattr('status', 'in', [200, 204]) | list | length),
        'user_groups_errors': (delete_user_group_result.results | default([]) | selectattr('status', 'defined') | rejectattr('status', 'in', [200, 204, 404]) | list | length)
      }) }}"
  when: wallix_cleanup.operation_mode == 'execute'

- name: "✅ Cleanup | User group cleanup summary"
  debug:
    msg:
      - "User group cleanup completed"
      - "Processed: {{ wallix_cleanup_stats.user_groups_processed | default(0) }}"
      - "Deleted: {{ wallix_cleanup_stats.user_groups_deleted | default(0) }}"
      - "Errors: {{ wallix_cleanup_stats.user_groups_errors | default(0) }}"